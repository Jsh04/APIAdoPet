// <auto-generated />
using System;
using APIAdoPet.Infraestrutura.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIAdoPet.Migrations
{
    [DbContext(typeof(APIAdopetContext))]
    partial class APIAdopetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("APIAdoPet.Domains.Abrigo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Abrigo", (string)null);
                });

            modelBuilder.Entity("APIAdoPet.Domains.Adocao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TutorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("Adocaos", (string)null);
                });

            modelBuilder.Entity("APIAdoPet.Domains.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AbrigoId")
                        .HasColumnType("int");

                    b.Property<int?>("AdocaoId")
                        .HasColumnType("int");

                    b.Property<bool>("Adotado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Idade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AbrigoId");

                    b.HasIndex("AdocaoId");

                    b.ToTable("Pets", (string)null);
                });

            modelBuilder.Entity("APIAdoPet.Domains.Tutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValue("");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("Tutores", (string)null);
                });

            modelBuilder.Entity("APIAdoPet.Domains.Abrigo", b =>
                {
                    b.OwnsOne("APIAdoPet.Domains.Abrigo.Endereco#APIAdoPet.Domains.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("AbrigoId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("AbrigoId");

                            b1.ToTable("Abrigo", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("AbrigoId");
                        });

                    b.Navigation("Endereco")
                        .IsRequired();
                });

            modelBuilder.Entity("APIAdoPet.Domains.Adocao", b =>
                {
                    b.HasOne("APIAdoPet.Domains.Tutor", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("APIAdoPet.Domains.Pet", b =>
                {
                    b.HasOne("APIAdoPet.Domains.Abrigo", "Abrigo")
                        .WithMany("Pets")
                        .HasForeignKey("AbrigoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIAdoPet.Domains.Adocao", null)
                        .WithMany("Pets")
                        .HasForeignKey("AdocaoId");

                    b.OwnsOne("APIAdoPet.Domains.Pet.Endereco#APIAdoPet.Domains.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("PetId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("PetId");

                            b1.ToTable("Pets", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PetId");
                        });

                    b.Navigation("Abrigo");

                    b.Navigation("Endereco")
                        .IsRequired();
                });

            modelBuilder.Entity("APIAdoPet.Domains.Tutor", b =>
                {
                    b.OwnsOne("APIAdoPet.Domains.Tutor.Endereco#APIAdoPet.Domains.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("TutorId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("TutorId");

                            b1.ToTable("Tutores", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("TutorId");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("APIAdoPet.Domains.Abrigo", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("APIAdoPet.Domains.Adocao", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
